
export NODE_VERSION="v8.4.0"

export NPM_PACKAGES="\
elm@0.18.0 \
webpack@3.5.5 \
"
# elm-test@0.17.3 \
# phantomjs@2.1.7 \
# elm-format@0.6.1-alpha \

export ENV_DIR=$PWD/node_env
export PATH="$PATH:/home/garrett/.cargo/bin:/run/current-system/sw/bin"

# https://stackoverflow.com/questions/46227290/elm-make-fails-to-compile-when-running-with-yarn-on-nixos
CABAL_ELM_MAKE="$PWD/node_modules/elm/Elm-Platform/0.18.0/.cabal-sandbox/bin/elm-make"
rm -f $CABAL_ELM_MAKE
ln -s $(nix-build -A elmPackages.elm '<nixpkgs>')/bin/elm-make $CABAL_ELM_MAKE

# if [[ `uname` == "Darwin" ]]; then
#     NODE_URL="https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-darwin-x64.tar.gz"
# else
#     NODE_URL="https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-linux-x64.tar.xz"
# fi
#
# if [ -z $TRAVIS_BUILD_DIR ]; then
#     # if non-travis, create in target directory and override PATH
#     export ENV_DIR=$PWD/node_env
#     export PATH="/run/current-system/sw/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/sbin"
# else
#     # if on travis, create in ~/build_environment and leave PATH alone
#     export ENV_DIR=$HOME/node_env
# fi
#
# errcho() {
#   >&2 echo "\e[1m\e[32m${1}\e[0m"
# }
#
# if [ ! -f "elm-package.json" ]; then
#     errcho "Must be run in web-ui dir."
#     return 1
# fi
#
# pathinsert() {
#     export PATH="$1:$PATH"
# }
#
# mkdir -p $ENV_DIR
#
# ################################################################################
# # set up node path and packages
# errcho "-- setting up node.js and elm --"
#
# export NODE_DIR=$ENV_DIR/node
# NODE_BIN=$NODE_DIR/bin
#
# if [ -x $NODE_BIN/node ]; then
#     current_node_version=$($NODE_BIN/node --version) || return $?
# fi
# if [ ! -x $NODE_BIN/node ] || [ "$current_node_version" != "$NODE_VERSION" ]; then
#     errcho "- installing node.js + npm"
#     rm -rf $NODE_DIR && mkdir $NODE_DIR || return $?
#     curl -LSfs $NODE_URL | \
#         tar xJ --directory $NODE_DIR --strip-components=1 --
# fi
# pathinsert $NODE_DIR/node_modules/.bin
# pathinsert $NODE_BIN
